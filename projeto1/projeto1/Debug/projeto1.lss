
projeto1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000186  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  000001fa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000022c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  0000026c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006ca  00000000  00000000  0000029c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000632  00000000  00000000  00000966  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000027f  00000000  00000000  00000f98  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000078  00000000  00000000  00001218  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000366  00000000  00000000  00001290  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ac  00000000  00000000  000015f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000016a2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__vector_1>
   8:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__vector_2>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 c1 00 	jmp	0x182	; 0x182 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:

int c = 0;
int estado = 0;

int main(void){
	DDRB = 0b00001111;
  90:	8f e0       	ldi	r24, 0x0F	; 15
  92:	84 b9       	out	0x04, r24	; 4
	DDRD = 0b11110011;
  94:	93 ef       	ldi	r25, 0xF3	; 243
  96:	9a b9       	out	0x0a, r25	; 10
	EICRA = 0b00001111; // Habilita interrupção por borda de subida INT0
  98:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	sei(); // habilita a chave geral de interrupção
  9c:	78 94       	sei
	EIMSK = 0b00000011;
  9e:	83 e0       	ldi	r24, 0x03	; 3
  a0:	8d bb       	out	0x1d, r24	; 29
	PORTD |= (1<<1); // liga laser
  a2:	8b b1       	in	r24, 0x0b	; 11
  a4:	82 60       	ori	r24, 0x02	; 2
  a6:	8b b9       	out	0x0b, r24	; 11
	PORTD |= (1<<4); // liga rele
  a8:	8b b1       	in	r24, 0x0b	; 11
  aa:	80 61       	ori	r24, 0x10	; 16
  ac:	8b b9       	out	0x0b, r24	; 11
  ae:	ff cf       	rjmp	.-2      	; 0xae <main+0x1e>

000000b0 <__vector_1>:
		//PORTD |= (1<<6); //liga led verde
		//PORTD &= ~(1<<5); //desliga led vermelho
    }
}

ISR(INT0_vect){
  b0:	1f 92       	push	r1
  b2:	0f 92       	push	r0
  b4:	0f b6       	in	r0, 0x3f	; 63
  b6:	0f 92       	push	r0
  b8:	11 24       	eor	r1, r1
  ba:	8f 93       	push	r24
  bc:	9f 93       	push	r25
	PORTB = c;
  be:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <c>
  c2:	85 b9       	out	0x05, r24	; 5
	c++;
  c4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <c>
  c8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <c+0x1>
  cc:	01 96       	adiw	r24, 0x01	; 1
  ce:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <c+0x1>
  d2:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <c>
	if(c > 9){
  d6:	0a 97       	sbiw	r24, 0x0a	; 10
  d8:	3c f0       	brlt	.+14     	; 0xe8 <__vector_1+0x38>
		PORTD |= (1<<7); // liga buzzer
  da:	8b b1       	in	r24, 0x0b	; 11
  dc:	80 68       	ori	r24, 0x80	; 128
  de:	8b b9       	out	0x0b, r24	; 11
		c = 0;
  e0:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <c+0x1>
  e4:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <c>
	}
}
  e8:	9f 91       	pop	r25
  ea:	8f 91       	pop	r24
  ec:	0f 90       	pop	r0
  ee:	0f be       	out	0x3f, r0	; 63
  f0:	0f 90       	pop	r0
  f2:	1f 90       	pop	r1
  f4:	18 95       	reti

000000f6 <__vector_2>:

ISR(INT1_vect){
  f6:	1f 92       	push	r1
  f8:	0f 92       	push	r0
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	0f 92       	push	r0
  fe:	11 24       	eor	r1, r1
 100:	2f 93       	push	r18
 102:	3f 93       	push	r19
 104:	8f 93       	push	r24
 106:	9f 93       	push	r25
	if(estado == 0){
 108:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 10c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 110:	89 2b       	or	r24, r25
 112:	c9 f4       	brne	.+50     	; 0x146 <__vector_2+0x50>
		PORTD &= ~(1<<7); // desliga buzzer
 114:	8b b1       	in	r24, 0x0b	; 11
 116:	8f 77       	andi	r24, 0x7F	; 127
 118:	8b b9       	out	0x0b, r24	; 11
		PORTD &= ~(1<<4); // desliga rele
 11a:	8b b1       	in	r24, 0x0b	; 11
 11c:	8f 7e       	andi	r24, 0xEF	; 239
 11e:	8b b9       	out	0x0b, r24	; 11
		PORTD &= ~(1<<1); // desliga laser
 120:	8b b1       	in	r24, 0x0b	; 11
 122:	8d 7f       	andi	r24, 0xFD	; 253
 124:	8b b9       	out	0x0b, r24	; 11
		estado = !estado;
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 12e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 132:	23 2b       	or	r18, r19
 134:	11 f0       	breq	.+4      	; 0x13a <__vector_2+0x44>
 136:	80 e0       	ldi	r24, 0x00	; 0
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 13e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		PORTB = 0;
 142:	15 b8       	out	0x05, r1	; 5
 144:	15 c0       	rjmp	.+42     	; 0x170 <__vector_2+0x7a>
	}else{
		PORTD |= (1<<4); // liga rele
 146:	8b b1       	in	r24, 0x0b	; 11
 148:	80 61       	ori	r24, 0x10	; 16
 14a:	8b b9       	out	0x0b, r24	; 11
		PORTD |= (1<<1); // liga laser
 14c:	8b b1       	in	r24, 0x0b	; 11
 14e:	82 60       	ori	r24, 0x02	; 2
 150:	8b b9       	out	0x0b, r24	; 11
		estado = !estado;
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 15a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 15e:	23 2b       	or	r18, r19
 160:	11 f0       	breq	.+4      	; 0x166 <__vector_2+0x70>
 162:	80 e0       	ldi	r24, 0x00	; 0
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 16a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		PORTB = 0;
 16e:	15 b8       	out	0x05, r1	; 5
	}
}
 170:	9f 91       	pop	r25
 172:	8f 91       	pop	r24
 174:	3f 91       	pop	r19
 176:	2f 91       	pop	r18
 178:	0f 90       	pop	r0
 17a:	0f be       	out	0x3f, r0	; 63
 17c:	0f 90       	pop	r0
 17e:	1f 90       	pop	r1
 180:	18 95       	reti

00000182 <_exit>:
 182:	f8 94       	cli

00000184 <__stop_program>:
 184:	ff cf       	rjmp	.-2      	; 0x184 <__stop_program>
