
cancelaAutomatica.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000a3a  00000ace  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a3a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800114  00800114  00000ae2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ae2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000b80  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fe1  00000000  00000000  00000c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d9  00000000  00000000  00001c21  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007de  00000000  00000000  000024fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000150  00000000  00000000  00002cd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000049e  00000000  00000000  00002e28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006e2  00000000  00000000  000032c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000039a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 ae 01 	jmp	0x35c	; 0x35c <__vector_1>
   8:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e3       	ldi	r30, 0x3A	; 58
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 31       	cpi	r26, 0x14	; 20
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e1       	ldi	r26, 0x14	; 20
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a7 31       	cpi	r26, 0x17	; 23
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 4d 01 	call	0x29a	; 0x29a <main>
  9e:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd_send_command>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a6:	98 2f       	mov	r25, r24
  a8:	90 7f       	andi	r25, 0xF0	; 240
  aa:	9b b9       	out	0x0b, r25	; 11
  ac:	98 b1       	in	r25, 0x08	; 8
  ae:	9f 7d       	andi	r25, 0xDF	; 223
  b0:	98 b9       	out	0x08, r25	; 8
  b2:	98 b1       	in	r25, 0x08	; 8
  b4:	98 60       	ori	r25, 0x08	; 8
  b6:	98 b9       	out	0x08, r25	; 8
  b8:	e9 ef       	ldi	r30, 0xF9	; 249
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	31 97       	sbiw	r30, 0x01	; 1
  be:	f1 f7       	brne	.-4      	; 0xbc <lcd_send_command+0x16>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <lcd_send_command+0x1c>
  c2:	00 00       	nop
  c4:	98 b1       	in	r25, 0x08	; 8
  c6:	97 7f       	andi	r25, 0xF7	; 247
  c8:	98 b9       	out	0x08, r25	; 8
  ca:	e9 ef       	ldi	r30, 0xF9	; 249
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	31 97       	sbiw	r30, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <lcd_send_command+0x28>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <lcd_send_command+0x2e>
  d4:	00 00       	nop
  d6:	f0 e1       	ldi	r31, 0x10	; 16
  d8:	8f 9f       	mul	r24, r31
  da:	c0 01       	movw	r24, r0
  dc:	11 24       	eor	r1, r1
  de:	8b b9       	out	0x0b, r24	; 11
  e0:	88 b1       	in	r24, 0x08	; 8
  e2:	88 60       	ori	r24, 0x08	; 8
  e4:	88 b9       	out	0x08, r24	; 8
  e6:	89 ef       	ldi	r24, 0xF9	; 249
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	f1 f7       	brne	.-4      	; 0xea <lcd_send_command+0x44>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <lcd_send_command+0x4a>
  f0:	00 00       	nop
  f2:	88 b1       	in	r24, 0x08	; 8
  f4:	87 7f       	andi	r24, 0xF7	; 247
  f6:	88 b9       	out	0x08, r24	; 8
  f8:	e9 ef       	ldi	r30, 0xF9	; 249
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	31 97       	sbiw	r30, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <lcd_send_command+0x56>
 100:	00 c0       	rjmp	.+0      	; 0x102 <lcd_send_command+0x5c>
 102:	00 00       	nop
 104:	08 95       	ret

00000106 <lcd_init>:
 106:	80 ef       	ldi	r24, 0xF0	; 240
 108:	8a b9       	out	0x0a, r24	; 10
 10a:	87 b1       	in	r24, 0x07	; 7
 10c:	88 63       	ori	r24, 0x38	; 56
 10e:	87 b9       	out	0x07, r24	; 7
 110:	80 e2       	ldi	r24, 0x20	; 32
 112:	8b b9       	out	0x0b, r24	; 11
 114:	88 b1       	in	r24, 0x08	; 8
 116:	88 60       	ori	r24, 0x08	; 8
 118:	88 b9       	out	0x08, r24	; 8
 11a:	89 ef       	ldi	r24, 0xF9	; 249
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <lcd_init+0x18>
 122:	00 c0       	rjmp	.+0      	; 0x124 <lcd_init+0x1e>
 124:	00 00       	nop
 126:	88 b1       	in	r24, 0x08	; 8
 128:	87 7f       	andi	r24, 0xF7	; 247
 12a:	88 b9       	out	0x08, r24	; 8
 12c:	89 ef       	ldi	r24, 0xF9	; 249
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <lcd_init+0x2a>
 134:	00 c0       	rjmp	.+0      	; 0x136 <lcd_init+0x30>
 136:	00 00       	nop
 138:	88 e2       	ldi	r24, 0x28	; 40
 13a:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send_command>
 13e:	89 ef       	ldi	r24, 0xF9	; 249
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <lcd_init+0x3c>
 146:	00 c0       	rjmp	.+0      	; 0x148 <lcd_init+0x42>
 148:	00 00       	nop
 14a:	8f e0       	ldi	r24, 0x0F	; 15
 14c:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send_command>
 150:	89 ef       	ldi	r24, 0xF9	; 249
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <lcd_init+0x4e>
 158:	00 c0       	rjmp	.+0      	; 0x15a <lcd_init+0x54>
 15a:	00 00       	nop
 15c:	80 e8       	ldi	r24, 0x80	; 128
 15e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send_command>
 162:	08 95       	ret

00000164 <lcd_write_character>:
 164:	98 2f       	mov	r25, r24
 166:	90 7f       	andi	r25, 0xF0	; 240
 168:	9b b9       	out	0x0b, r25	; 11
 16a:	98 b1       	in	r25, 0x08	; 8
 16c:	90 62       	ori	r25, 0x20	; 32
 16e:	98 b9       	out	0x08, r25	; 8
 170:	98 b1       	in	r25, 0x08	; 8
 172:	98 60       	ori	r25, 0x08	; 8
 174:	98 b9       	out	0x08, r25	; 8
 176:	e3 ef       	ldi	r30, 0xF3	; 243
 178:	f1 e0       	ldi	r31, 0x01	; 1
 17a:	31 97       	sbiw	r30, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <lcd_write_character+0x16>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <lcd_write_character+0x1c>
 180:	00 00       	nop
 182:	98 b1       	in	r25, 0x08	; 8
 184:	97 7f       	andi	r25, 0xF7	; 247
 186:	98 b9       	out	0x08, r25	; 8
 188:	e3 ef       	ldi	r30, 0xF3	; 243
 18a:	f1 e0       	ldi	r31, 0x01	; 1
 18c:	31 97       	sbiw	r30, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <lcd_write_character+0x28>
 190:	00 c0       	rjmp	.+0      	; 0x192 <lcd_write_character+0x2e>
 192:	00 00       	nop
 194:	f0 e1       	ldi	r31, 0x10	; 16
 196:	8f 9f       	mul	r24, r31
 198:	c0 01       	movw	r24, r0
 19a:	11 24       	eor	r1, r1
 19c:	8b b9       	out	0x0b, r24	; 11
 19e:	88 b1       	in	r24, 0x08	; 8
 1a0:	88 60       	ori	r24, 0x08	; 8
 1a2:	88 b9       	out	0x08, r24	; 8
 1a4:	83 ef       	ldi	r24, 0xF3	; 243
 1a6:	91 e0       	ldi	r25, 0x01	; 1
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <lcd_write_character+0x44>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <lcd_write_character+0x4a>
 1ae:	00 00       	nop
 1b0:	88 b1       	in	r24, 0x08	; 8
 1b2:	87 7f       	andi	r24, 0xF7	; 247
 1b4:	88 b9       	out	0x08, r24	; 8
 1b6:	e3 ef       	ldi	r30, 0xF3	; 243
 1b8:	f1 e0       	ldi	r31, 0x01	; 1
 1ba:	31 97       	sbiw	r30, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <lcd_write_character+0x56>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <lcd_write_character+0x5c>
 1c0:	00 00       	nop
 1c2:	08 95       	ret

000001c4 <lcd_write_word>:
 1c4:	0f 93       	push	r16
 1c6:	1f 93       	push	r17
 1c8:	cf 93       	push	r28
 1ca:	df 93       	push	r29
 1cc:	8c 01       	movw	r16, r24
 1ce:	c0 e0       	ldi	r28, 0x00	; 0
 1d0:	d0 e0       	ldi	r29, 0x00	; 0
 1d2:	03 c0       	rjmp	.+6      	; 0x1da <lcd_write_word+0x16>
 1d4:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_character>
 1d8:	21 96       	adiw	r28, 0x01	; 1
 1da:	f8 01       	movw	r30, r16
 1dc:	ec 0f       	add	r30, r28
 1de:	fd 1f       	adc	r31, r29
 1e0:	80 81       	ld	r24, Z
 1e2:	81 11       	cpse	r24, r1
 1e4:	f7 cf       	rjmp	.-18     	; 0x1d4 <lcd_write_word+0x10>
 1e6:	df 91       	pop	r29
 1e8:	cf 91       	pop	r28
 1ea:	1f 91       	pop	r17
 1ec:	0f 91       	pop	r16
 1ee:	08 95       	ret

000001f0 <lcd_goto_xy>:
	lcd_send_command(LCD_CMD_CLEAR_DISPLAY);
	_delay_ms(5);
}
void lcd_goto_xy (uint8_t line,uint8_t pos)				//line = 0 or 1
{
	lcd_send_command((0x80|(line<<6))+pos);
 1f0:	20 e4       	ldi	r18, 0x40	; 64
 1f2:	82 9f       	mul	r24, r18
 1f4:	c0 01       	movw	r24, r0
 1f6:	11 24       	eor	r1, r1
 1f8:	80 68       	ori	r24, 0x80	; 128
 1fa:	86 0f       	add	r24, r22
 1fc:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 200:	80 e1       	ldi	r24, 0x10	; 16
 202:	8a 95       	dec	r24
 204:	f1 f7       	brne	.-4      	; 0x202 <lcd_goto_xy+0x12>
 206:	00 c0       	rjmp	.+0      	; 0x208 <lcd_goto_xy+0x18>
 208:	08 95       	ret

0000020a <lcd_write_integer>:
	_delay_us (50);
}

void lcd_write_integer(int num) {
 20a:	0f 93       	push	r16
 20c:	1f 93       	push	r17
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	cd b7       	in	r28, 0x3d	; 61
 214:	de b7       	in	r29, 0x3e	; 62
 216:	64 97       	sbiw	r28, 0x14	; 20
 218:	0f b6       	in	r0, 0x3f	; 63
 21a:	f8 94       	cli
 21c:	de bf       	out	0x3e, r29	; 62
 21e:	0f be       	out	0x3f, r0	; 63
 220:	cd bf       	out	0x3d, r28	; 61
    char buffer[20];
    sprintf(buffer, "%d", num);
 222:	9f 93       	push	r25
 224:	8f 93       	push	r24
 226:	80 e0       	ldi	r24, 0x00	; 0
 228:	91 e0       	ldi	r25, 0x01	; 1
 22a:	9f 93       	push	r25
 22c:	8f 93       	push	r24
 22e:	8e 01       	movw	r16, r28
 230:	0f 5f       	subi	r16, 0xFF	; 255
 232:	1f 4f       	sbci	r17, 0xFF	; 255
 234:	1f 93       	push	r17
 236:	0f 93       	push	r16
 238:	0e 94 1b 02 	call	0x436	; 0x436 <sprintf>
    int length = strlen(buffer);
 23c:	f8 01       	movw	r30, r16
 23e:	01 90       	ld	r0, Z+
 240:	00 20       	and	r0, r0
 242:	e9 f7       	brne	.-6      	; 0x23e <lcd_write_integer+0x34>
 244:	31 97       	sbiw	r30, 0x01	; 1
 246:	cf 01       	movw	r24, r30
 248:	80 1b       	sub	r24, r16
 24a:	91 0b       	sbc	r25, r17
    if (length < 20) {
 24c:	0f 90       	pop	r0
 24e:	0f 90       	pop	r0
 250:	0f 90       	pop	r0
 252:	0f 90       	pop	r0
 254:	0f 90       	pop	r0
 256:	0f 90       	pop	r0
 258:	84 31       	cpi	r24, 0x14	; 20
 25a:	91 05       	cpc	r25, r1
 25c:	7c f4       	brge	.+30     	; 0x27c <lcd_write_integer+0x72>
	    memset(buffer + length, ' ', 20 - length);
 25e:	44 e1       	ldi	r20, 0x14	; 20
 260:	50 e0       	ldi	r21, 0x00	; 0
 262:	48 1b       	sub	r20, r24
 264:	59 0b       	sbc	r21, r25
 266:	60 e2       	ldi	r22, 0x20	; 32
 268:	70 e0       	ldi	r23, 0x00	; 0
 26a:	01 e0       	ldi	r16, 0x01	; 1
 26c:	10 e0       	ldi	r17, 0x00	; 0
 26e:	0c 0f       	add	r16, r28
 270:	1d 1f       	adc	r17, r29
 272:	80 0f       	add	r24, r16
 274:	91 1f       	adc	r25, r17
 276:	0e 94 14 02 	call	0x428	; 0x428 <memset>
	    buffer[20] = '\0';
 27a:	1d 8a       	std	Y+21, r1	; 0x15
    }
    lcd_write_word(buffer);
 27c:	ce 01       	movw	r24, r28
 27e:	01 96       	adiw	r24, 0x01	; 1
 280:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_write_word>
 284:	64 96       	adiw	r28, 0x14	; 20
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	f8 94       	cli
 28a:	de bf       	out	0x3e, r29	; 62
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	cd bf       	out	0x3d, r28	; 61
 290:	df 91       	pop	r29
 292:	cf 91       	pop	r28
 294:	1f 91       	pop	r17
 296:	0f 91       	pop	r16
 298:	08 95       	ret

0000029a <main>:
#define ADDR_VAR 0
volatile uint8_t debounce_flag = 0; // Flag para controle do debounce
int carros = 0;

int main(void){
	cli();
 29a:	f8 94       	cli
	DDRB |= (1<<3); // Configura o pino PB3 (OC2A) como sa�da
 29c:	84 b1       	in	r24, 0x04	; 4
 29e:	88 60       	ori	r24, 0x08	; 8
 2a0:	84 b9       	out	0x04, r24	; 4
	DDRB |= (1<<4);
 2a2:	84 b1       	in	r24, 0x04	; 4
 2a4:	80 61       	ori	r24, 0x10	; 16
 2a6:	84 b9       	out	0x04, r24	; 4
	DDRB |= (1<<5);
 2a8:	84 b1       	in	r24, 0x04	; 4
 2aa:	80 62       	ori	r24, 0x20	; 32
 2ac:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~(1<<4);
 2ae:	85 b1       	in	r24, 0x05	; 5
 2b0:	8f 7e       	andi	r24, 0xEF	; 239
 2b2:	85 b9       	out	0x05, r24	; 5
	PORTB &= ~(1<<5);
 2b4:	85 b1       	in	r24, 0x05	; 5
 2b6:	8f 7d       	andi	r24, 0xDF	; 223
 2b8:	85 b9       	out	0x05, r24	; 5
	
	EICRA = 0b00001111; // Habilita interrup��o por borda de subida INT0
 2ba:	8f e0       	ldi	r24, 0x0F	; 15
 2bc:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	sei();
 2c0:	78 94       	sei
	EIMSK = 0b00000011;
 2c2:	83 e0       	ldi	r24, 0x03	; 3
 2c4:	8d bb       	out	0x1d, r24	; 29
	
	//PWM R�pido
	TCCR2B &= ~(1<<WGM22);
 2c6:	a1 eb       	ldi	r26, 0xB1	; 177
 2c8:	b0 e0       	ldi	r27, 0x00	; 0
 2ca:	8c 91       	ld	r24, X
 2cc:	87 7f       	andi	r24, 0xF7	; 247
 2ce:	8c 93       	st	X, r24
	TCCR2A |= (1<<WGM21) | (1<<WGM20);
 2d0:	e0 eb       	ldi	r30, 0xB0	; 176
 2d2:	f0 e0       	ldi	r31, 0x00	; 0
 2d4:	80 81       	ld	r24, Z
 2d6:	83 60       	ori	r24, 0x03	; 3
 2d8:	80 83       	st	Z, r24
		
	//Prescaler 1024
	TCCR2B |= (1<<CS22) | (1<<CS21) | (1<<CS20);
 2da:	8c 91       	ld	r24, X
 2dc:	87 60       	ori	r24, 0x07	; 7
 2de:	8c 93       	st	X, r24
		
	//evento no pino OC2A
	TCCR2A |= (1<<COM2A1);
 2e0:	80 81       	ld	r24, Z
 2e2:	80 68       	ori	r24, 0x80	; 128
 2e4:	80 83       	st	Z, r24
	TCCR2A &= ~(1<<COM2A0);
 2e6:	80 81       	ld	r24, Z
 2e8:	8f 7b       	andi	r24, 0xBF	; 191
 2ea:	80 83       	st	Z, r24
	
	// Carrega o valor armazenado na EEPROM na vari�vel
	carros = eeprom_read_byte((uint8_t*)ADDR_VAR);
 2ec:	80 e0       	ldi	r24, 0x00	; 0
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	0e 94 ce 04 	call	0x99c	; 0x99c <eeprom_read_byte>
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 2fa:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
	
	//Inicia o LCD
	lcd_init();
 2fe:	0e 94 83 00 	call	0x106	; 0x106 <lcd_init>
	lcd_goto_xy(0,0);
 302:	60 e0       	ldi	r22, 0x00	; 0
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <lcd_goto_xy>
	lcd_write_word("Estacionamento: ");
 30a:	83 e0       	ldi	r24, 0x03	; 3
 30c:	91 e0       	ldi	r25, 0x01	; 1
 30e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_write_word>
	lcd_goto_xy(1,0);
 312:	60 e0       	ldi	r22, 0x00	; 0
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <lcd_goto_xy>
	lcd_write_integer(carros);
 31a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 31e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 322:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_write_integer>
	
	OCR2A = 23; // Abaixa a cancela (servo motor)
 326:	87 e1       	ldi	r24, 0x17	; 23
 328:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	
	while(1){
		while(!debounce_flag);
 32c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <debounce_flag>
 330:	88 23       	and	r24, r24
 332:	e1 f3       	breq	.-8      	; 0x32c <main+0x92>
		debounce_flag = 0; // Reseta a flag de debounce
 334:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <debounce_flag>
		// Configura o modo de sono como SLEEP_MODE_DOWN
		set_sleep_mode(SLEEP_MODE_STANDBY);
 338:	83 b7       	in	r24, 0x33	; 51
 33a:	81 7f       	andi	r24, 0xF1	; 241
 33c:	8c 60       	ori	r24, 0x0C	; 12
 33e:	83 bf       	out	0x33, r24	; 51
		//Habilita o modo de sono
		sleep_enable();
 340:	83 b7       	in	r24, 0x33	; 51
 342:	81 60       	ori	r24, 0x01	; 1
 344:	83 bf       	out	0x33, r24	; 51
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 346:	2f ef       	ldi	r18, 0xFF	; 255
 348:	81 ee       	ldi	r24, 0xE1	; 225
 34a:	94 e0       	ldi	r25, 0x04	; 4
 34c:	21 50       	subi	r18, 0x01	; 1
 34e:	80 40       	sbci	r24, 0x00	; 0
 350:	90 40       	sbci	r25, 0x00	; 0
 352:	e1 f7       	brne	.-8      	; 0x34c <main+0xb2>
 354:	00 c0       	rjmp	.+0      	; 0x356 <main+0xbc>
 356:	00 00       	nop
		_delay_ms(100);
		// dorme ate que uma interrupcao ocorra
		sleep_cpu();
 358:	88 95       	sleep
	}
 35a:	e8 cf       	rjmp	.-48     	; 0x32c <main+0x92>

0000035c <__vector_1>:
}

ISR(INT0_vect){
 35c:	1f 92       	push	r1
 35e:	0f 92       	push	r0
 360:	0f b6       	in	r0, 0x3f	; 63
 362:	0f 92       	push	r0
 364:	11 24       	eor	r1, r1
 366:	2f 93       	push	r18
 368:	3f 93       	push	r19
 36a:	4f 93       	push	r20
 36c:	5f 93       	push	r21
 36e:	6f 93       	push	r22
 370:	7f 93       	push	r23
 372:	8f 93       	push	r24
 374:	9f 93       	push	r25
 376:	af 93       	push	r26
 378:	bf 93       	push	r27
 37a:	ef 93       	push	r30
 37c:	ff 93       	push	r31
	    if (!debounce_flag) { // Verifica se o debounce já não foi ativado
 37e:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <debounce_flag>
 382:	81 11       	cpse	r24, r1
 384:	27 c0       	rjmp	.+78     	; 0x3d4 <__vector_1+0x78>
		    debounce_flag = 1; // Ativa a flag de debounce
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <debounce_flag>
			OCR2A = 23; // Abaixa a cancela (servo motor)
 38c:	87 e1       	ldi	r24, 0x17	; 23
 38e:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
			carros++; //incrementa os carros
 392:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 396:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 39a:	01 96       	adiw	r24, 0x01	; 1
 39c:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 3a0:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
			
			// atualiza LCD
			lcd_goto_xy(0,0);
 3a4:	60 e0       	ldi	r22, 0x00	; 0
 3a6:	80 e0       	ldi	r24, 0x00	; 0
 3a8:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <lcd_goto_xy>
			lcd_write_word("Estacionamento: ");
 3ac:	83 e0       	ldi	r24, 0x03	; 3
 3ae:	91 e0       	ldi	r25, 0x01	; 1
 3b0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_write_word>
			lcd_goto_xy(1,0);
 3b4:	60 e0       	ldi	r22, 0x00	; 0
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <lcd_goto_xy>
			lcd_write_integer(carros);
 3bc:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 3c0:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 3c4:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_write_integer>
			
			// Salva o novo valor na EEPROM
			eeprom_write_byte((uint8_t*)ADDR_VAR, carros);
 3c8:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <__data_end>
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	0e 94 d6 04 	call	0x9ac	; 0x9ac <eeprom_write_byte>
		}
}
 3d4:	ff 91       	pop	r31
 3d6:	ef 91       	pop	r30
 3d8:	bf 91       	pop	r27
 3da:	af 91       	pop	r26
 3dc:	9f 91       	pop	r25
 3de:	8f 91       	pop	r24
 3e0:	7f 91       	pop	r23
 3e2:	6f 91       	pop	r22
 3e4:	5f 91       	pop	r21
 3e6:	4f 91       	pop	r20
 3e8:	3f 91       	pop	r19
 3ea:	2f 91       	pop	r18
 3ec:	0f 90       	pop	r0
 3ee:	0f be       	out	0x3f, r0	; 63
 3f0:	0f 90       	pop	r0
 3f2:	1f 90       	pop	r1
 3f4:	18 95       	reti

000003f6 <__vector_2>:

ISR(INT1_vect){
 3f6:	1f 92       	push	r1
 3f8:	0f 92       	push	r0
 3fa:	0f b6       	in	r0, 0x3f	; 63
 3fc:	0f 92       	push	r0
 3fe:	11 24       	eor	r1, r1
 400:	8f 93       	push	r24
	    if (!debounce_flag) { // Verifica se o debounce já não foi ativado
 402:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <debounce_flag>
 406:	81 11       	cpse	r24, r1
 408:	09 c0       	rjmp	.+18     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
		    debounce_flag = 1; // Ativa a flag de debounce
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <debounce_flag>
			OCR2A = 7; // levanta a cancela (servo motor)
 410:	87 e0       	ldi	r24, 0x07	; 7
 412:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
			PORTB |= (1<<5);
 416:	85 b1       	in	r24, 0x05	; 5
 418:	80 62       	ori	r24, 0x20	; 32
 41a:	85 b9       	out	0x05, r24	; 5
		}
}
 41c:	8f 91       	pop	r24
 41e:	0f 90       	pop	r0
 420:	0f be       	out	0x3f, r0	; 63
 422:	0f 90       	pop	r0
 424:	1f 90       	pop	r1
 426:	18 95       	reti

00000428 <memset>:
 428:	dc 01       	movw	r26, r24
 42a:	01 c0       	rjmp	.+2      	; 0x42e <memset+0x6>
 42c:	6d 93       	st	X+, r22
 42e:	41 50       	subi	r20, 0x01	; 1
 430:	50 40       	sbci	r21, 0x00	; 0
 432:	e0 f7       	brcc	.-8      	; 0x42c <memset+0x4>
 434:	08 95       	ret

00000436 <sprintf>:
 436:	ae e0       	ldi	r26, 0x0E	; 14
 438:	b0 e0       	ldi	r27, 0x00	; 0
 43a:	e1 e2       	ldi	r30, 0x21	; 33
 43c:	f2 e0       	ldi	r31, 0x02	; 2
 43e:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <__prologue_saves__+0x1c>
 442:	0d 89       	ldd	r16, Y+21	; 0x15
 444:	1e 89       	ldd	r17, Y+22	; 0x16
 446:	86 e0       	ldi	r24, 0x06	; 6
 448:	8c 83       	std	Y+4, r24	; 0x04
 44a:	1a 83       	std	Y+2, r17	; 0x02
 44c:	09 83       	std	Y+1, r16	; 0x01
 44e:	8f ef       	ldi	r24, 0xFF	; 255
 450:	9f e7       	ldi	r25, 0x7F	; 127
 452:	9e 83       	std	Y+6, r25	; 0x06
 454:	8d 83       	std	Y+5, r24	; 0x05
 456:	ae 01       	movw	r20, r28
 458:	47 5e       	subi	r20, 0xE7	; 231
 45a:	5f 4f       	sbci	r21, 0xFF	; 255
 45c:	6f 89       	ldd	r22, Y+23	; 0x17
 45e:	78 8d       	ldd	r23, Y+24	; 0x18
 460:	ce 01       	movw	r24, r28
 462:	01 96       	adiw	r24, 0x01	; 1
 464:	0e 94 3d 02 	call	0x47a	; 0x47a <vfprintf>
 468:	ef 81       	ldd	r30, Y+7	; 0x07
 46a:	f8 85       	ldd	r31, Y+8	; 0x08
 46c:	e0 0f       	add	r30, r16
 46e:	f1 1f       	adc	r31, r17
 470:	10 82       	st	Z, r1
 472:	2e 96       	adiw	r28, 0x0e	; 14
 474:	e4 e0       	ldi	r30, 0x04	; 4
 476:	0c 94 0e 05 	jmp	0xa1c	; 0xa1c <__epilogue_restores__+0x1c>

0000047a <vfprintf>:
 47a:	ab e0       	ldi	r26, 0x0B	; 11
 47c:	b0 e0       	ldi	r27, 0x00	; 0
 47e:	e3 e4       	ldi	r30, 0x43	; 67
 480:	f2 e0       	ldi	r31, 0x02	; 2
 482:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__prologue_saves__>
 486:	6c 01       	movw	r12, r24
 488:	7b 01       	movw	r14, r22
 48a:	8a 01       	movw	r16, r20
 48c:	fc 01       	movw	r30, r24
 48e:	17 82       	std	Z+7, r1	; 0x07
 490:	16 82       	std	Z+6, r1	; 0x06
 492:	83 81       	ldd	r24, Z+3	; 0x03
 494:	81 ff       	sbrs	r24, 1
 496:	cc c1       	rjmp	.+920    	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 498:	ce 01       	movw	r24, r28
 49a:	01 96       	adiw	r24, 0x01	; 1
 49c:	3c 01       	movw	r6, r24
 49e:	f6 01       	movw	r30, r12
 4a0:	93 81       	ldd	r25, Z+3	; 0x03
 4a2:	f7 01       	movw	r30, r14
 4a4:	93 fd       	sbrc	r25, 3
 4a6:	85 91       	lpm	r24, Z+
 4a8:	93 ff       	sbrs	r25, 3
 4aa:	81 91       	ld	r24, Z+
 4ac:	7f 01       	movw	r14, r30
 4ae:	88 23       	and	r24, r24
 4b0:	09 f4       	brne	.+2      	; 0x4b4 <vfprintf+0x3a>
 4b2:	ba c1       	rjmp	.+884    	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 4b4:	85 32       	cpi	r24, 0x25	; 37
 4b6:	39 f4       	brne	.+14     	; 0x4c6 <vfprintf+0x4c>
 4b8:	93 fd       	sbrc	r25, 3
 4ba:	85 91       	lpm	r24, Z+
 4bc:	93 ff       	sbrs	r25, 3
 4be:	81 91       	ld	r24, Z+
 4c0:	7f 01       	movw	r14, r30
 4c2:	85 32       	cpi	r24, 0x25	; 37
 4c4:	29 f4       	brne	.+10     	; 0x4d0 <vfprintf+0x56>
 4c6:	b6 01       	movw	r22, r12
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	0e 94 34 04 	call	0x868	; 0x868 <fputc>
 4ce:	e7 cf       	rjmp	.-50     	; 0x49e <vfprintf+0x24>
 4d0:	91 2c       	mov	r9, r1
 4d2:	21 2c       	mov	r2, r1
 4d4:	31 2c       	mov	r3, r1
 4d6:	ff e1       	ldi	r31, 0x1F	; 31
 4d8:	f3 15       	cp	r31, r3
 4da:	d8 f0       	brcs	.+54     	; 0x512 <vfprintf+0x98>
 4dc:	8b 32       	cpi	r24, 0x2B	; 43
 4de:	79 f0       	breq	.+30     	; 0x4fe <vfprintf+0x84>
 4e0:	38 f4       	brcc	.+14     	; 0x4f0 <vfprintf+0x76>
 4e2:	80 32       	cpi	r24, 0x20	; 32
 4e4:	79 f0       	breq	.+30     	; 0x504 <vfprintf+0x8a>
 4e6:	83 32       	cpi	r24, 0x23	; 35
 4e8:	a1 f4       	brne	.+40     	; 0x512 <vfprintf+0x98>
 4ea:	23 2d       	mov	r18, r3
 4ec:	20 61       	ori	r18, 0x10	; 16
 4ee:	1d c0       	rjmp	.+58     	; 0x52a <vfprintf+0xb0>
 4f0:	8d 32       	cpi	r24, 0x2D	; 45
 4f2:	61 f0       	breq	.+24     	; 0x50c <vfprintf+0x92>
 4f4:	80 33       	cpi	r24, 0x30	; 48
 4f6:	69 f4       	brne	.+26     	; 0x512 <vfprintf+0x98>
 4f8:	23 2d       	mov	r18, r3
 4fa:	21 60       	ori	r18, 0x01	; 1
 4fc:	16 c0       	rjmp	.+44     	; 0x52a <vfprintf+0xb0>
 4fe:	83 2d       	mov	r24, r3
 500:	82 60       	ori	r24, 0x02	; 2
 502:	38 2e       	mov	r3, r24
 504:	e3 2d       	mov	r30, r3
 506:	e4 60       	ori	r30, 0x04	; 4
 508:	3e 2e       	mov	r3, r30
 50a:	2a c0       	rjmp	.+84     	; 0x560 <vfprintf+0xe6>
 50c:	f3 2d       	mov	r31, r3
 50e:	f8 60       	ori	r31, 0x08	; 8
 510:	1d c0       	rjmp	.+58     	; 0x54c <vfprintf+0xd2>
 512:	37 fc       	sbrc	r3, 7
 514:	2d c0       	rjmp	.+90     	; 0x570 <vfprintf+0xf6>
 516:	20 ed       	ldi	r18, 0xD0	; 208
 518:	28 0f       	add	r18, r24
 51a:	2a 30       	cpi	r18, 0x0A	; 10
 51c:	40 f0       	brcs	.+16     	; 0x52e <vfprintf+0xb4>
 51e:	8e 32       	cpi	r24, 0x2E	; 46
 520:	b9 f4       	brne	.+46     	; 0x550 <vfprintf+0xd6>
 522:	36 fc       	sbrc	r3, 6
 524:	81 c1       	rjmp	.+770    	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 526:	23 2d       	mov	r18, r3
 528:	20 64       	ori	r18, 0x40	; 64
 52a:	32 2e       	mov	r3, r18
 52c:	19 c0       	rjmp	.+50     	; 0x560 <vfprintf+0xe6>
 52e:	36 fe       	sbrs	r3, 6
 530:	06 c0       	rjmp	.+12     	; 0x53e <vfprintf+0xc4>
 532:	8a e0       	ldi	r24, 0x0A	; 10
 534:	98 9e       	mul	r9, r24
 536:	20 0d       	add	r18, r0
 538:	11 24       	eor	r1, r1
 53a:	92 2e       	mov	r9, r18
 53c:	11 c0       	rjmp	.+34     	; 0x560 <vfprintf+0xe6>
 53e:	ea e0       	ldi	r30, 0x0A	; 10
 540:	2e 9e       	mul	r2, r30
 542:	20 0d       	add	r18, r0
 544:	11 24       	eor	r1, r1
 546:	22 2e       	mov	r2, r18
 548:	f3 2d       	mov	r31, r3
 54a:	f0 62       	ori	r31, 0x20	; 32
 54c:	3f 2e       	mov	r3, r31
 54e:	08 c0       	rjmp	.+16     	; 0x560 <vfprintf+0xe6>
 550:	8c 36       	cpi	r24, 0x6C	; 108
 552:	21 f4       	brne	.+8      	; 0x55c <vfprintf+0xe2>
 554:	83 2d       	mov	r24, r3
 556:	80 68       	ori	r24, 0x80	; 128
 558:	38 2e       	mov	r3, r24
 55a:	02 c0       	rjmp	.+4      	; 0x560 <vfprintf+0xe6>
 55c:	88 36       	cpi	r24, 0x68	; 104
 55e:	41 f4       	brne	.+16     	; 0x570 <vfprintf+0xf6>
 560:	f7 01       	movw	r30, r14
 562:	93 fd       	sbrc	r25, 3
 564:	85 91       	lpm	r24, Z+
 566:	93 ff       	sbrs	r25, 3
 568:	81 91       	ld	r24, Z+
 56a:	7f 01       	movw	r14, r30
 56c:	81 11       	cpse	r24, r1
 56e:	b3 cf       	rjmp	.-154    	; 0x4d6 <vfprintf+0x5c>
 570:	98 2f       	mov	r25, r24
 572:	9f 7d       	andi	r25, 0xDF	; 223
 574:	95 54       	subi	r25, 0x45	; 69
 576:	93 30       	cpi	r25, 0x03	; 3
 578:	28 f4       	brcc	.+10     	; 0x584 <vfprintf+0x10a>
 57a:	0c 5f       	subi	r16, 0xFC	; 252
 57c:	1f 4f       	sbci	r17, 0xFF	; 255
 57e:	9f e3       	ldi	r25, 0x3F	; 63
 580:	99 83       	std	Y+1, r25	; 0x01
 582:	0d c0       	rjmp	.+26     	; 0x59e <vfprintf+0x124>
 584:	83 36       	cpi	r24, 0x63	; 99
 586:	31 f0       	breq	.+12     	; 0x594 <vfprintf+0x11a>
 588:	83 37       	cpi	r24, 0x73	; 115
 58a:	71 f0       	breq	.+28     	; 0x5a8 <vfprintf+0x12e>
 58c:	83 35       	cpi	r24, 0x53	; 83
 58e:	09 f0       	breq	.+2      	; 0x592 <vfprintf+0x118>
 590:	59 c0       	rjmp	.+178    	; 0x644 <vfprintf+0x1ca>
 592:	21 c0       	rjmp	.+66     	; 0x5d6 <vfprintf+0x15c>
 594:	f8 01       	movw	r30, r16
 596:	80 81       	ld	r24, Z
 598:	89 83       	std	Y+1, r24	; 0x01
 59a:	0e 5f       	subi	r16, 0xFE	; 254
 59c:	1f 4f       	sbci	r17, 0xFF	; 255
 59e:	88 24       	eor	r8, r8
 5a0:	83 94       	inc	r8
 5a2:	91 2c       	mov	r9, r1
 5a4:	53 01       	movw	r10, r6
 5a6:	13 c0       	rjmp	.+38     	; 0x5ce <vfprintf+0x154>
 5a8:	28 01       	movw	r4, r16
 5aa:	f2 e0       	ldi	r31, 0x02	; 2
 5ac:	4f 0e       	add	r4, r31
 5ae:	51 1c       	adc	r5, r1
 5b0:	f8 01       	movw	r30, r16
 5b2:	a0 80       	ld	r10, Z
 5b4:	b1 80       	ldd	r11, Z+1	; 0x01
 5b6:	36 fe       	sbrs	r3, 6
 5b8:	03 c0       	rjmp	.+6      	; 0x5c0 <vfprintf+0x146>
 5ba:	69 2d       	mov	r22, r9
 5bc:	70 e0       	ldi	r23, 0x00	; 0
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <vfprintf+0x14a>
 5c0:	6f ef       	ldi	r22, 0xFF	; 255
 5c2:	7f ef       	ldi	r23, 0xFF	; 255
 5c4:	c5 01       	movw	r24, r10
 5c6:	0e 94 29 04 	call	0x852	; 0x852 <strnlen>
 5ca:	4c 01       	movw	r8, r24
 5cc:	82 01       	movw	r16, r4
 5ce:	f3 2d       	mov	r31, r3
 5d0:	ff 77       	andi	r31, 0x7F	; 127
 5d2:	3f 2e       	mov	r3, r31
 5d4:	16 c0       	rjmp	.+44     	; 0x602 <vfprintf+0x188>
 5d6:	28 01       	movw	r4, r16
 5d8:	22 e0       	ldi	r18, 0x02	; 2
 5da:	42 0e       	add	r4, r18
 5dc:	51 1c       	adc	r5, r1
 5de:	f8 01       	movw	r30, r16
 5e0:	a0 80       	ld	r10, Z
 5e2:	b1 80       	ldd	r11, Z+1	; 0x01
 5e4:	36 fe       	sbrs	r3, 6
 5e6:	03 c0       	rjmp	.+6      	; 0x5ee <vfprintf+0x174>
 5e8:	69 2d       	mov	r22, r9
 5ea:	70 e0       	ldi	r23, 0x00	; 0
 5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <vfprintf+0x178>
 5ee:	6f ef       	ldi	r22, 0xFF	; 255
 5f0:	7f ef       	ldi	r23, 0xFF	; 255
 5f2:	c5 01       	movw	r24, r10
 5f4:	0e 94 1e 04 	call	0x83c	; 0x83c <strnlen_P>
 5f8:	4c 01       	movw	r8, r24
 5fa:	f3 2d       	mov	r31, r3
 5fc:	f0 68       	ori	r31, 0x80	; 128
 5fe:	3f 2e       	mov	r3, r31
 600:	82 01       	movw	r16, r4
 602:	33 fc       	sbrc	r3, 3
 604:	1b c0       	rjmp	.+54     	; 0x63c <vfprintf+0x1c2>
 606:	82 2d       	mov	r24, r2
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	88 16       	cp	r8, r24
 60c:	99 06       	cpc	r9, r25
 60e:	b0 f4       	brcc	.+44     	; 0x63c <vfprintf+0x1c2>
 610:	b6 01       	movw	r22, r12
 612:	80 e2       	ldi	r24, 0x20	; 32
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	0e 94 34 04 	call	0x868	; 0x868 <fputc>
 61a:	2a 94       	dec	r2
 61c:	f4 cf       	rjmp	.-24     	; 0x606 <vfprintf+0x18c>
 61e:	f5 01       	movw	r30, r10
 620:	37 fc       	sbrc	r3, 7
 622:	85 91       	lpm	r24, Z+
 624:	37 fe       	sbrs	r3, 7
 626:	81 91       	ld	r24, Z+
 628:	5f 01       	movw	r10, r30
 62a:	b6 01       	movw	r22, r12
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	0e 94 34 04 	call	0x868	; 0x868 <fputc>
 632:	21 10       	cpse	r2, r1
 634:	2a 94       	dec	r2
 636:	21 e0       	ldi	r18, 0x01	; 1
 638:	82 1a       	sub	r8, r18
 63a:	91 08       	sbc	r9, r1
 63c:	81 14       	cp	r8, r1
 63e:	91 04       	cpc	r9, r1
 640:	71 f7       	brne	.-36     	; 0x61e <vfprintf+0x1a4>
 642:	e8 c0       	rjmp	.+464    	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 644:	84 36       	cpi	r24, 0x64	; 100
 646:	11 f0       	breq	.+4      	; 0x64c <vfprintf+0x1d2>
 648:	89 36       	cpi	r24, 0x69	; 105
 64a:	41 f5       	brne	.+80     	; 0x69c <vfprintf+0x222>
 64c:	f8 01       	movw	r30, r16
 64e:	37 fe       	sbrs	r3, 7
 650:	07 c0       	rjmp	.+14     	; 0x660 <vfprintf+0x1e6>
 652:	60 81       	ld	r22, Z
 654:	71 81       	ldd	r23, Z+1	; 0x01
 656:	82 81       	ldd	r24, Z+2	; 0x02
 658:	93 81       	ldd	r25, Z+3	; 0x03
 65a:	0c 5f       	subi	r16, 0xFC	; 252
 65c:	1f 4f       	sbci	r17, 0xFF	; 255
 65e:	08 c0       	rjmp	.+16     	; 0x670 <vfprintf+0x1f6>
 660:	60 81       	ld	r22, Z
 662:	71 81       	ldd	r23, Z+1	; 0x01
 664:	07 2e       	mov	r0, r23
 666:	00 0c       	add	r0, r0
 668:	88 0b       	sbc	r24, r24
 66a:	99 0b       	sbc	r25, r25
 66c:	0e 5f       	subi	r16, 0xFE	; 254
 66e:	1f 4f       	sbci	r17, 0xFF	; 255
 670:	f3 2d       	mov	r31, r3
 672:	ff 76       	andi	r31, 0x6F	; 111
 674:	3f 2e       	mov	r3, r31
 676:	97 ff       	sbrs	r25, 7
 678:	09 c0       	rjmp	.+18     	; 0x68c <vfprintf+0x212>
 67a:	90 95       	com	r25
 67c:	80 95       	com	r24
 67e:	70 95       	com	r23
 680:	61 95       	neg	r22
 682:	7f 4f       	sbci	r23, 0xFF	; 255
 684:	8f 4f       	sbci	r24, 0xFF	; 255
 686:	9f 4f       	sbci	r25, 0xFF	; 255
 688:	f0 68       	ori	r31, 0x80	; 128
 68a:	3f 2e       	mov	r3, r31
 68c:	2a e0       	ldi	r18, 0x0A	; 10
 68e:	30 e0       	ldi	r19, 0x00	; 0
 690:	a3 01       	movw	r20, r6
 692:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__ultoa_invert>
 696:	88 2e       	mov	r8, r24
 698:	86 18       	sub	r8, r6
 69a:	45 c0       	rjmp	.+138    	; 0x726 <vfprintf+0x2ac>
 69c:	85 37       	cpi	r24, 0x75	; 117
 69e:	31 f4       	brne	.+12     	; 0x6ac <vfprintf+0x232>
 6a0:	23 2d       	mov	r18, r3
 6a2:	2f 7e       	andi	r18, 0xEF	; 239
 6a4:	b2 2e       	mov	r11, r18
 6a6:	2a e0       	ldi	r18, 0x0A	; 10
 6a8:	30 e0       	ldi	r19, 0x00	; 0
 6aa:	25 c0       	rjmp	.+74     	; 0x6f6 <vfprintf+0x27c>
 6ac:	93 2d       	mov	r25, r3
 6ae:	99 7f       	andi	r25, 0xF9	; 249
 6b0:	b9 2e       	mov	r11, r25
 6b2:	8f 36       	cpi	r24, 0x6F	; 111
 6b4:	c1 f0       	breq	.+48     	; 0x6e6 <vfprintf+0x26c>
 6b6:	18 f4       	brcc	.+6      	; 0x6be <vfprintf+0x244>
 6b8:	88 35       	cpi	r24, 0x58	; 88
 6ba:	79 f0       	breq	.+30     	; 0x6da <vfprintf+0x260>
 6bc:	b5 c0       	rjmp	.+362    	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 6be:	80 37       	cpi	r24, 0x70	; 112
 6c0:	19 f0       	breq	.+6      	; 0x6c8 <vfprintf+0x24e>
 6c2:	88 37       	cpi	r24, 0x78	; 120
 6c4:	21 f0       	breq	.+8      	; 0x6ce <vfprintf+0x254>
 6c6:	b0 c0       	rjmp	.+352    	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 6c8:	e9 2f       	mov	r30, r25
 6ca:	e0 61       	ori	r30, 0x10	; 16
 6cc:	be 2e       	mov	r11, r30
 6ce:	b4 fe       	sbrs	r11, 4
 6d0:	0d c0       	rjmp	.+26     	; 0x6ec <vfprintf+0x272>
 6d2:	fb 2d       	mov	r31, r11
 6d4:	f4 60       	ori	r31, 0x04	; 4
 6d6:	bf 2e       	mov	r11, r31
 6d8:	09 c0       	rjmp	.+18     	; 0x6ec <vfprintf+0x272>
 6da:	34 fe       	sbrs	r3, 4
 6dc:	0a c0       	rjmp	.+20     	; 0x6f2 <vfprintf+0x278>
 6de:	29 2f       	mov	r18, r25
 6e0:	26 60       	ori	r18, 0x06	; 6
 6e2:	b2 2e       	mov	r11, r18
 6e4:	06 c0       	rjmp	.+12     	; 0x6f2 <vfprintf+0x278>
 6e6:	28 e0       	ldi	r18, 0x08	; 8
 6e8:	30 e0       	ldi	r19, 0x00	; 0
 6ea:	05 c0       	rjmp	.+10     	; 0x6f6 <vfprintf+0x27c>
 6ec:	20 e1       	ldi	r18, 0x10	; 16
 6ee:	30 e0       	ldi	r19, 0x00	; 0
 6f0:	02 c0       	rjmp	.+4      	; 0x6f6 <vfprintf+0x27c>
 6f2:	20 e1       	ldi	r18, 0x10	; 16
 6f4:	32 e0       	ldi	r19, 0x02	; 2
 6f6:	f8 01       	movw	r30, r16
 6f8:	b7 fe       	sbrs	r11, 7
 6fa:	07 c0       	rjmp	.+14     	; 0x70a <vfprintf+0x290>
 6fc:	60 81       	ld	r22, Z
 6fe:	71 81       	ldd	r23, Z+1	; 0x01
 700:	82 81       	ldd	r24, Z+2	; 0x02
 702:	93 81       	ldd	r25, Z+3	; 0x03
 704:	0c 5f       	subi	r16, 0xFC	; 252
 706:	1f 4f       	sbci	r17, 0xFF	; 255
 708:	06 c0       	rjmp	.+12     	; 0x716 <vfprintf+0x29c>
 70a:	60 81       	ld	r22, Z
 70c:	71 81       	ldd	r23, Z+1	; 0x01
 70e:	80 e0       	ldi	r24, 0x00	; 0
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	0e 5f       	subi	r16, 0xFE	; 254
 714:	1f 4f       	sbci	r17, 0xFF	; 255
 716:	a3 01       	movw	r20, r6
 718:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__ultoa_invert>
 71c:	88 2e       	mov	r8, r24
 71e:	86 18       	sub	r8, r6
 720:	fb 2d       	mov	r31, r11
 722:	ff 77       	andi	r31, 0x7F	; 127
 724:	3f 2e       	mov	r3, r31
 726:	36 fe       	sbrs	r3, 6
 728:	0d c0       	rjmp	.+26     	; 0x744 <vfprintf+0x2ca>
 72a:	23 2d       	mov	r18, r3
 72c:	2e 7f       	andi	r18, 0xFE	; 254
 72e:	a2 2e       	mov	r10, r18
 730:	89 14       	cp	r8, r9
 732:	58 f4       	brcc	.+22     	; 0x74a <vfprintf+0x2d0>
 734:	34 fe       	sbrs	r3, 4
 736:	0b c0       	rjmp	.+22     	; 0x74e <vfprintf+0x2d4>
 738:	32 fc       	sbrc	r3, 2
 73a:	09 c0       	rjmp	.+18     	; 0x74e <vfprintf+0x2d4>
 73c:	83 2d       	mov	r24, r3
 73e:	8e 7e       	andi	r24, 0xEE	; 238
 740:	a8 2e       	mov	r10, r24
 742:	05 c0       	rjmp	.+10     	; 0x74e <vfprintf+0x2d4>
 744:	b8 2c       	mov	r11, r8
 746:	a3 2c       	mov	r10, r3
 748:	03 c0       	rjmp	.+6      	; 0x750 <vfprintf+0x2d6>
 74a:	b8 2c       	mov	r11, r8
 74c:	01 c0       	rjmp	.+2      	; 0x750 <vfprintf+0x2d6>
 74e:	b9 2c       	mov	r11, r9
 750:	a4 fe       	sbrs	r10, 4
 752:	0f c0       	rjmp	.+30     	; 0x772 <vfprintf+0x2f8>
 754:	fe 01       	movw	r30, r28
 756:	e8 0d       	add	r30, r8
 758:	f1 1d       	adc	r31, r1
 75a:	80 81       	ld	r24, Z
 75c:	80 33       	cpi	r24, 0x30	; 48
 75e:	21 f4       	brne	.+8      	; 0x768 <vfprintf+0x2ee>
 760:	9a 2d       	mov	r25, r10
 762:	99 7e       	andi	r25, 0xE9	; 233
 764:	a9 2e       	mov	r10, r25
 766:	09 c0       	rjmp	.+18     	; 0x77a <vfprintf+0x300>
 768:	a2 fe       	sbrs	r10, 2
 76a:	06 c0       	rjmp	.+12     	; 0x778 <vfprintf+0x2fe>
 76c:	b3 94       	inc	r11
 76e:	b3 94       	inc	r11
 770:	04 c0       	rjmp	.+8      	; 0x77a <vfprintf+0x300>
 772:	8a 2d       	mov	r24, r10
 774:	86 78       	andi	r24, 0x86	; 134
 776:	09 f0       	breq	.+2      	; 0x77a <vfprintf+0x300>
 778:	b3 94       	inc	r11
 77a:	a3 fc       	sbrc	r10, 3
 77c:	11 c0       	rjmp	.+34     	; 0x7a0 <vfprintf+0x326>
 77e:	a0 fe       	sbrs	r10, 0
 780:	06 c0       	rjmp	.+12     	; 0x78e <vfprintf+0x314>
 782:	b2 14       	cp	r11, r2
 784:	88 f4       	brcc	.+34     	; 0x7a8 <vfprintf+0x32e>
 786:	28 0c       	add	r2, r8
 788:	92 2c       	mov	r9, r2
 78a:	9b 18       	sub	r9, r11
 78c:	0e c0       	rjmp	.+28     	; 0x7aa <vfprintf+0x330>
 78e:	b2 14       	cp	r11, r2
 790:	60 f4       	brcc	.+24     	; 0x7aa <vfprintf+0x330>
 792:	b6 01       	movw	r22, r12
 794:	80 e2       	ldi	r24, 0x20	; 32
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	0e 94 34 04 	call	0x868	; 0x868 <fputc>
 79c:	b3 94       	inc	r11
 79e:	f7 cf       	rjmp	.-18     	; 0x78e <vfprintf+0x314>
 7a0:	b2 14       	cp	r11, r2
 7a2:	18 f4       	brcc	.+6      	; 0x7aa <vfprintf+0x330>
 7a4:	2b 18       	sub	r2, r11
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <vfprintf+0x332>
 7a8:	98 2c       	mov	r9, r8
 7aa:	21 2c       	mov	r2, r1
 7ac:	a4 fe       	sbrs	r10, 4
 7ae:	10 c0       	rjmp	.+32     	; 0x7d0 <vfprintf+0x356>
 7b0:	b6 01       	movw	r22, r12
 7b2:	80 e3       	ldi	r24, 0x30	; 48
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	0e 94 34 04 	call	0x868	; 0x868 <fputc>
 7ba:	a2 fe       	sbrs	r10, 2
 7bc:	17 c0       	rjmp	.+46     	; 0x7ec <vfprintf+0x372>
 7be:	a1 fc       	sbrc	r10, 1
 7c0:	03 c0       	rjmp	.+6      	; 0x7c8 <vfprintf+0x34e>
 7c2:	88 e7       	ldi	r24, 0x78	; 120
 7c4:	90 e0       	ldi	r25, 0x00	; 0
 7c6:	02 c0       	rjmp	.+4      	; 0x7cc <vfprintf+0x352>
 7c8:	88 e5       	ldi	r24, 0x58	; 88
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	b6 01       	movw	r22, r12
 7ce:	0c c0       	rjmp	.+24     	; 0x7e8 <vfprintf+0x36e>
 7d0:	8a 2d       	mov	r24, r10
 7d2:	86 78       	andi	r24, 0x86	; 134
 7d4:	59 f0       	breq	.+22     	; 0x7ec <vfprintf+0x372>
 7d6:	a1 fe       	sbrs	r10, 1
 7d8:	02 c0       	rjmp	.+4      	; 0x7de <vfprintf+0x364>
 7da:	8b e2       	ldi	r24, 0x2B	; 43
 7dc:	01 c0       	rjmp	.+2      	; 0x7e0 <vfprintf+0x366>
 7de:	80 e2       	ldi	r24, 0x20	; 32
 7e0:	a7 fc       	sbrc	r10, 7
 7e2:	8d e2       	ldi	r24, 0x2D	; 45
 7e4:	b6 01       	movw	r22, r12
 7e6:	90 e0       	ldi	r25, 0x00	; 0
 7e8:	0e 94 34 04 	call	0x868	; 0x868 <fputc>
 7ec:	89 14       	cp	r8, r9
 7ee:	38 f4       	brcc	.+14     	; 0x7fe <vfprintf+0x384>
 7f0:	b6 01       	movw	r22, r12
 7f2:	80 e3       	ldi	r24, 0x30	; 48
 7f4:	90 e0       	ldi	r25, 0x00	; 0
 7f6:	0e 94 34 04 	call	0x868	; 0x868 <fputc>
 7fa:	9a 94       	dec	r9
 7fc:	f7 cf       	rjmp	.-18     	; 0x7ec <vfprintf+0x372>
 7fe:	8a 94       	dec	r8
 800:	f3 01       	movw	r30, r6
 802:	e8 0d       	add	r30, r8
 804:	f1 1d       	adc	r31, r1
 806:	80 81       	ld	r24, Z
 808:	b6 01       	movw	r22, r12
 80a:	90 e0       	ldi	r25, 0x00	; 0
 80c:	0e 94 34 04 	call	0x868	; 0x868 <fputc>
 810:	81 10       	cpse	r8, r1
 812:	f5 cf       	rjmp	.-22     	; 0x7fe <vfprintf+0x384>
 814:	22 20       	and	r2, r2
 816:	09 f4       	brne	.+2      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 818:	42 ce       	rjmp	.-892    	; 0x49e <vfprintf+0x24>
 81a:	b6 01       	movw	r22, r12
 81c:	80 e2       	ldi	r24, 0x20	; 32
 81e:	90 e0       	ldi	r25, 0x00	; 0
 820:	0e 94 34 04 	call	0x868	; 0x868 <fputc>
 824:	2a 94       	dec	r2
 826:	f6 cf       	rjmp	.-20     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 828:	f6 01       	movw	r30, r12
 82a:	86 81       	ldd	r24, Z+6	; 0x06
 82c:	97 81       	ldd	r25, Z+7	; 0x07
 82e:	02 c0       	rjmp	.+4      	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 830:	8f ef       	ldi	r24, 0xFF	; 255
 832:	9f ef       	ldi	r25, 0xFF	; 255
 834:	2b 96       	adiw	r28, 0x0b	; 11
 836:	e2 e1       	ldi	r30, 0x12	; 18
 838:	0c 94 00 05 	jmp	0xa00	; 0xa00 <__epilogue_restores__>

0000083c <strnlen_P>:
 83c:	fc 01       	movw	r30, r24
 83e:	05 90       	lpm	r0, Z+
 840:	61 50       	subi	r22, 0x01	; 1
 842:	70 40       	sbci	r23, 0x00	; 0
 844:	01 10       	cpse	r0, r1
 846:	d8 f7       	brcc	.-10     	; 0x83e <strnlen_P+0x2>
 848:	80 95       	com	r24
 84a:	90 95       	com	r25
 84c:	8e 0f       	add	r24, r30
 84e:	9f 1f       	adc	r25, r31
 850:	08 95       	ret

00000852 <strnlen>:
 852:	fc 01       	movw	r30, r24
 854:	61 50       	subi	r22, 0x01	; 1
 856:	70 40       	sbci	r23, 0x00	; 0
 858:	01 90       	ld	r0, Z+
 85a:	01 10       	cpse	r0, r1
 85c:	d8 f7       	brcc	.-10     	; 0x854 <strnlen+0x2>
 85e:	80 95       	com	r24
 860:	90 95       	com	r25
 862:	8e 0f       	add	r24, r30
 864:	9f 1f       	adc	r25, r31
 866:	08 95       	ret

00000868 <fputc>:
 868:	0f 93       	push	r16
 86a:	1f 93       	push	r17
 86c:	cf 93       	push	r28
 86e:	df 93       	push	r29
 870:	fb 01       	movw	r30, r22
 872:	23 81       	ldd	r18, Z+3	; 0x03
 874:	21 fd       	sbrc	r18, 1
 876:	03 c0       	rjmp	.+6      	; 0x87e <fputc+0x16>
 878:	8f ef       	ldi	r24, 0xFF	; 255
 87a:	9f ef       	ldi	r25, 0xFF	; 255
 87c:	2c c0       	rjmp	.+88     	; 0x8d6 <fputc+0x6e>
 87e:	22 ff       	sbrs	r18, 2
 880:	16 c0       	rjmp	.+44     	; 0x8ae <fputc+0x46>
 882:	46 81       	ldd	r20, Z+6	; 0x06
 884:	57 81       	ldd	r21, Z+7	; 0x07
 886:	24 81       	ldd	r18, Z+4	; 0x04
 888:	35 81       	ldd	r19, Z+5	; 0x05
 88a:	42 17       	cp	r20, r18
 88c:	53 07       	cpc	r21, r19
 88e:	44 f4       	brge	.+16     	; 0x8a0 <fputc+0x38>
 890:	a0 81       	ld	r26, Z
 892:	b1 81       	ldd	r27, Z+1	; 0x01
 894:	9d 01       	movw	r18, r26
 896:	2f 5f       	subi	r18, 0xFF	; 255
 898:	3f 4f       	sbci	r19, 0xFF	; 255
 89a:	31 83       	std	Z+1, r19	; 0x01
 89c:	20 83       	st	Z, r18
 89e:	8c 93       	st	X, r24
 8a0:	26 81       	ldd	r18, Z+6	; 0x06
 8a2:	37 81       	ldd	r19, Z+7	; 0x07
 8a4:	2f 5f       	subi	r18, 0xFF	; 255
 8a6:	3f 4f       	sbci	r19, 0xFF	; 255
 8a8:	37 83       	std	Z+7, r19	; 0x07
 8aa:	26 83       	std	Z+6, r18	; 0x06
 8ac:	14 c0       	rjmp	.+40     	; 0x8d6 <fputc+0x6e>
 8ae:	8b 01       	movw	r16, r22
 8b0:	ec 01       	movw	r28, r24
 8b2:	fb 01       	movw	r30, r22
 8b4:	00 84       	ldd	r0, Z+8	; 0x08
 8b6:	f1 85       	ldd	r31, Z+9	; 0x09
 8b8:	e0 2d       	mov	r30, r0
 8ba:	09 95       	icall
 8bc:	89 2b       	or	r24, r25
 8be:	e1 f6       	brne	.-72     	; 0x878 <fputc+0x10>
 8c0:	d8 01       	movw	r26, r16
 8c2:	16 96       	adiw	r26, 0x06	; 6
 8c4:	8d 91       	ld	r24, X+
 8c6:	9c 91       	ld	r25, X
 8c8:	17 97       	sbiw	r26, 0x07	; 7
 8ca:	01 96       	adiw	r24, 0x01	; 1
 8cc:	17 96       	adiw	r26, 0x07	; 7
 8ce:	9c 93       	st	X, r25
 8d0:	8e 93       	st	-X, r24
 8d2:	16 97       	sbiw	r26, 0x06	; 6
 8d4:	ce 01       	movw	r24, r28
 8d6:	df 91       	pop	r29
 8d8:	cf 91       	pop	r28
 8da:	1f 91       	pop	r17
 8dc:	0f 91       	pop	r16
 8de:	08 95       	ret

000008e0 <__ultoa_invert>:
 8e0:	fa 01       	movw	r30, r20
 8e2:	aa 27       	eor	r26, r26
 8e4:	28 30       	cpi	r18, 0x08	; 8
 8e6:	51 f1       	breq	.+84     	; 0x93c <__stack+0x3d>
 8e8:	20 31       	cpi	r18, 0x10	; 16
 8ea:	81 f1       	breq	.+96     	; 0x94c <__stack+0x4d>
 8ec:	e8 94       	clt
 8ee:	6f 93       	push	r22
 8f0:	6e 7f       	andi	r22, 0xFE	; 254
 8f2:	6e 5f       	subi	r22, 0xFE	; 254
 8f4:	7f 4f       	sbci	r23, 0xFF	; 255
 8f6:	8f 4f       	sbci	r24, 0xFF	; 255
 8f8:	9f 4f       	sbci	r25, 0xFF	; 255
 8fa:	af 4f       	sbci	r26, 0xFF	; 255
 8fc:	b1 e0       	ldi	r27, 0x01	; 1
 8fe:	3e d0       	rcall	.+124    	; 0x97c <__stack+0x7d>
 900:	b4 e0       	ldi	r27, 0x04	; 4
 902:	3c d0       	rcall	.+120    	; 0x97c <__stack+0x7d>
 904:	67 0f       	add	r22, r23
 906:	78 1f       	adc	r23, r24
 908:	89 1f       	adc	r24, r25
 90a:	9a 1f       	adc	r25, r26
 90c:	a1 1d       	adc	r26, r1
 90e:	68 0f       	add	r22, r24
 910:	79 1f       	adc	r23, r25
 912:	8a 1f       	adc	r24, r26
 914:	91 1d       	adc	r25, r1
 916:	a1 1d       	adc	r26, r1
 918:	6a 0f       	add	r22, r26
 91a:	71 1d       	adc	r23, r1
 91c:	81 1d       	adc	r24, r1
 91e:	91 1d       	adc	r25, r1
 920:	a1 1d       	adc	r26, r1
 922:	20 d0       	rcall	.+64     	; 0x964 <__stack+0x65>
 924:	09 f4       	brne	.+2      	; 0x928 <__stack+0x29>
 926:	68 94       	set
 928:	3f 91       	pop	r19
 92a:	2a e0       	ldi	r18, 0x0A	; 10
 92c:	26 9f       	mul	r18, r22
 92e:	11 24       	eor	r1, r1
 930:	30 19       	sub	r19, r0
 932:	30 5d       	subi	r19, 0xD0	; 208
 934:	31 93       	st	Z+, r19
 936:	de f6       	brtc	.-74     	; 0x8ee <__ultoa_invert+0xe>
 938:	cf 01       	movw	r24, r30
 93a:	08 95       	ret
 93c:	46 2f       	mov	r20, r22
 93e:	47 70       	andi	r20, 0x07	; 7
 940:	40 5d       	subi	r20, 0xD0	; 208
 942:	41 93       	st	Z+, r20
 944:	b3 e0       	ldi	r27, 0x03	; 3
 946:	0f d0       	rcall	.+30     	; 0x966 <__stack+0x67>
 948:	c9 f7       	brne	.-14     	; 0x93c <__stack+0x3d>
 94a:	f6 cf       	rjmp	.-20     	; 0x938 <__stack+0x39>
 94c:	46 2f       	mov	r20, r22
 94e:	4f 70       	andi	r20, 0x0F	; 15
 950:	40 5d       	subi	r20, 0xD0	; 208
 952:	4a 33       	cpi	r20, 0x3A	; 58
 954:	18 f0       	brcs	.+6      	; 0x95c <__stack+0x5d>
 956:	49 5d       	subi	r20, 0xD9	; 217
 958:	31 fd       	sbrc	r19, 1
 95a:	40 52       	subi	r20, 0x20	; 32
 95c:	41 93       	st	Z+, r20
 95e:	02 d0       	rcall	.+4      	; 0x964 <__stack+0x65>
 960:	a9 f7       	brne	.-22     	; 0x94c <__stack+0x4d>
 962:	ea cf       	rjmp	.-44     	; 0x938 <__stack+0x39>
 964:	b4 e0       	ldi	r27, 0x04	; 4
 966:	a6 95       	lsr	r26
 968:	97 95       	ror	r25
 96a:	87 95       	ror	r24
 96c:	77 95       	ror	r23
 96e:	67 95       	ror	r22
 970:	ba 95       	dec	r27
 972:	c9 f7       	brne	.-14     	; 0x966 <__stack+0x67>
 974:	00 97       	sbiw	r24, 0x00	; 0
 976:	61 05       	cpc	r22, r1
 978:	71 05       	cpc	r23, r1
 97a:	08 95       	ret
 97c:	9b 01       	movw	r18, r22
 97e:	ac 01       	movw	r20, r24
 980:	0a 2e       	mov	r0, r26
 982:	06 94       	lsr	r0
 984:	57 95       	ror	r21
 986:	47 95       	ror	r20
 988:	37 95       	ror	r19
 98a:	27 95       	ror	r18
 98c:	ba 95       	dec	r27
 98e:	c9 f7       	brne	.-14     	; 0x982 <__stack+0x83>
 990:	62 0f       	add	r22, r18
 992:	73 1f       	adc	r23, r19
 994:	84 1f       	adc	r24, r20
 996:	95 1f       	adc	r25, r21
 998:	a0 1d       	adc	r26, r0
 99a:	08 95       	ret

0000099c <eeprom_read_byte>:
 99c:	f9 99       	sbic	0x1f, 1	; 31
 99e:	fe cf       	rjmp	.-4      	; 0x99c <eeprom_read_byte>
 9a0:	92 bd       	out	0x22, r25	; 34
 9a2:	81 bd       	out	0x21, r24	; 33
 9a4:	f8 9a       	sbi	0x1f, 0	; 31
 9a6:	99 27       	eor	r25, r25
 9a8:	80 b5       	in	r24, 0x20	; 32
 9aa:	08 95       	ret

000009ac <eeprom_write_byte>:
 9ac:	26 2f       	mov	r18, r22

000009ae <eeprom_write_r18>:
 9ae:	f9 99       	sbic	0x1f, 1	; 31
 9b0:	fe cf       	rjmp	.-4      	; 0x9ae <eeprom_write_r18>
 9b2:	1f ba       	out	0x1f, r1	; 31
 9b4:	92 bd       	out	0x22, r25	; 34
 9b6:	81 bd       	out	0x21, r24	; 33
 9b8:	20 bd       	out	0x20, r18	; 32
 9ba:	0f b6       	in	r0, 0x3f	; 63
 9bc:	f8 94       	cli
 9be:	fa 9a       	sbi	0x1f, 2	; 31
 9c0:	f9 9a       	sbi	0x1f, 1	; 31
 9c2:	0f be       	out	0x3f, r0	; 63
 9c4:	01 96       	adiw	r24, 0x01	; 1
 9c6:	08 95       	ret

000009c8 <__prologue_saves__>:
 9c8:	2f 92       	push	r2
 9ca:	3f 92       	push	r3
 9cc:	4f 92       	push	r4
 9ce:	5f 92       	push	r5
 9d0:	6f 92       	push	r6
 9d2:	7f 92       	push	r7
 9d4:	8f 92       	push	r8
 9d6:	9f 92       	push	r9
 9d8:	af 92       	push	r10
 9da:	bf 92       	push	r11
 9dc:	cf 92       	push	r12
 9de:	df 92       	push	r13
 9e0:	ef 92       	push	r14
 9e2:	ff 92       	push	r15
 9e4:	0f 93       	push	r16
 9e6:	1f 93       	push	r17
 9e8:	cf 93       	push	r28
 9ea:	df 93       	push	r29
 9ec:	cd b7       	in	r28, 0x3d	; 61
 9ee:	de b7       	in	r29, 0x3e	; 62
 9f0:	ca 1b       	sub	r28, r26
 9f2:	db 0b       	sbc	r29, r27
 9f4:	0f b6       	in	r0, 0x3f	; 63
 9f6:	f8 94       	cli
 9f8:	de bf       	out	0x3e, r29	; 62
 9fa:	0f be       	out	0x3f, r0	; 63
 9fc:	cd bf       	out	0x3d, r28	; 61
 9fe:	09 94       	ijmp

00000a00 <__epilogue_restores__>:
 a00:	2a 88       	ldd	r2, Y+18	; 0x12
 a02:	39 88       	ldd	r3, Y+17	; 0x11
 a04:	48 88       	ldd	r4, Y+16	; 0x10
 a06:	5f 84       	ldd	r5, Y+15	; 0x0f
 a08:	6e 84       	ldd	r6, Y+14	; 0x0e
 a0a:	7d 84       	ldd	r7, Y+13	; 0x0d
 a0c:	8c 84       	ldd	r8, Y+12	; 0x0c
 a0e:	9b 84       	ldd	r9, Y+11	; 0x0b
 a10:	aa 84       	ldd	r10, Y+10	; 0x0a
 a12:	b9 84       	ldd	r11, Y+9	; 0x09
 a14:	c8 84       	ldd	r12, Y+8	; 0x08
 a16:	df 80       	ldd	r13, Y+7	; 0x07
 a18:	ee 80       	ldd	r14, Y+6	; 0x06
 a1a:	fd 80       	ldd	r15, Y+5	; 0x05
 a1c:	0c 81       	ldd	r16, Y+4	; 0x04
 a1e:	1b 81       	ldd	r17, Y+3	; 0x03
 a20:	aa 81       	ldd	r26, Y+2	; 0x02
 a22:	b9 81       	ldd	r27, Y+1	; 0x01
 a24:	ce 0f       	add	r28, r30
 a26:	d1 1d       	adc	r29, r1
 a28:	0f b6       	in	r0, 0x3f	; 63
 a2a:	f8 94       	cli
 a2c:	de bf       	out	0x3e, r29	; 62
 a2e:	0f be       	out	0x3f, r0	; 63
 a30:	cd bf       	out	0x3d, r28	; 61
 a32:	ed 01       	movw	r28, r26
 a34:	08 95       	ret

00000a36 <_exit>:
 a36:	f8 94       	cli

00000a38 <__stop_program>:
 a38:	ff cf       	rjmp	.-2      	; 0xa38 <__stop_program>
